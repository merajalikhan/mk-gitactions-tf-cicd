name: 'Build Databricks Deployment Workflow'

on:
  #push:
   # branches: [ "main" ]
  pull_request:
     branches: [ "main" ]
  
permissions:
  contents: read

   

jobs:  
  build-and-test:
    name: 'Build and Test'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./Terraform
     
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout repository
      uses: actions/checkout@v3    
      
    - name: Prepare Terraform
      uses: hashicorp/setup-terraform@v1
      with :
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Init Terraform
      run: |
        export DATABRICKS_HOST=$DATABRICKS_HOST 
        export DATABRICKS_TOKEN=$DATABRICKS_TOKEN 
        export TF_WORKSPACE="dev" 
        
        terraform init

      env: 
          DATABRICKS_HOST: ${{ secrets.DB_DEV_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DB_DEV_PAT }}
    
    - name: Plan Terraform
      id: plan     

      #env: 
      #  TF_VAR_databricks_host: "${{ secrets.DB_DEV_HOST }}"
      #  TF_VAR_databricks_token: "${{ secrets.DB_DEV_PAT }}"

      run: |   
        export DATABRICKS_HOST="$DATABRICKS_HOST"
        export DATABRICKS_TOKEN="dapid24a84b27054a5fccabc962278928be0-3"  
        export TF_WORKSPACE="dev" 

        terraform plan 

      env: 
        DATABRICKS_HOST: "https://adb-1710922579126448.8.azuredatabricks.net/"
        DATABRICKS_TOKEN: "dapid24a84b27054a5fccabc962278928be0-3"        
               
    - name: Apply Terraform
      id: apply      
      run: |
        export TF_WORKSPACE="dev"
        terraform apply -auto-approve 
      
          
      




       




    
         
      
      
      
      
