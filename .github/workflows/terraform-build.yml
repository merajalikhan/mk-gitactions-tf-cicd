name: 'Build Databricks Workflow'

on:
  #push:
   # branches: [ "main" ]
  pull_request:
     branches: [ "main" ]
  
permissions:
  contents: read

   
env: 
  TF_VAR_databricks_host: ${{ secrets.DATABRICKS_HOST }}
  TF_VAR_databricks_token: ${{ secrets.DATABRICKS_TOKEN }}
  TF_WORKSPACE: ${{vars.TF_WORKSPACE}} #"mk-test-api-ws-api"  

jobs:  
  build-and-test:
    name: 'Build and Test'
    runs-on: ubuntu-latest
    environment:  ${{vars.GIT_ENVIRONMENT}}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./Terraform
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout repository
      uses: actions/checkout@v3    
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Init Terraform
      run: |                                       
        terraform init   

    - name: Unit tests
      run : |
        working-directory: ./Terraform/
        echo "Unit testing config goes here...." 
        python -V 
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        pip install -r requirements.txt
        run: |
          echo "y
          ${{ secrets.DATABRICKS_HOST }}
          ${{ secrets.DATABRICKS_TOKEN }}
          "0518-123352-nb7rkkcm"
          
          15001" | databricks-connect configure
          pytest functions --junitxml=unit-testresults.xml

    - name: Archive artifacts
      uses: actions/upload-artifact@v3
      with:
        name: tf-files
        path: |
          Terraform
          !.terraform
          retention-days: 2
      




       




    
         
      
      
      
      
